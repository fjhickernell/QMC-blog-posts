@preamble{"\providecommand{\HickernellFJ}{Hickernell}"}

@Article{         numpy,
 title         = {Array programming with {NumPy}},
 author        = {Charles R. Harris and K. Jarrod Millman and St{'{e}}fan J.
                 van der Walt and Ralf Gommers and Pauli Virtanen and David
                 Cournapeau and Eric Wieser and Julian Taylor and Sebastian
                 Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
                 and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
                 Brett and Allan Haldane and Jaime Fern{'{a}}ndez del
                 R{'{\i}}o and Mark Wiebe and Pearu Peterson and Pierre
                 G{'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
                 Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
                 Travis E. Oliphant},
 year          = {2020},
 month         = sep,
 journal       = {Nature},
 volume        = {585},
 number        = {7825},
 pages         = {357--362},
 doi           = {10.1038/s41586-020-2649-2},
 publisher     = {Springer Science and Business Media {LLC}},
 url           = {https://doi.org/10.1038/s41586-020-2649-2}
}
  
@misc{owen2017randomized,
      title={A randomized Halton algorithm in R}, 
      author={Art B. Owen},
      year={2017},
      eprint={1706.02808},
      archivePrefix={arXiv},
      primaryClass={stat.CO}
}







@article{mrg63k3a,
author = {L'Ecuyer, Pierre},
title = {Good Parameters and Implementations for Combined Multiple Recursive Random Number Generators},
journal = {Operations Research},
volume = {47},
number = {1},
pages = {159-164},
year = {1999},
doi = {10.1287/opre.47.1.159},
URL = { 
        https://pubsonline.informs.org/doi/abs/10.1287/opre.47.1.159
},
abstract = { 
    Combining parallel multiple recursive sequences provides an efficient way of implementing random number generators with long periods and good structural properties. Such generators are statistically more robust than simple linear congruential generators that fit into a computer word. We made extensive computer searches for good parameter sets, with respect to the spectral test, for combined multiple recursive generators of different sizes. We also compare different implementations and give a specific code in C that is faster than previous implementations of similar generators. }
}


@book{unhelkar2017software,
  title={Software Engineering with {UML}},
  author={Unhelkar, Bhuvan},
  year={2017},
  publisher={CRC Press}
}